name: CI Pipeline - Payment Service

on:
  push:
    branches:
      - main
  pull_request:
    branches: ['main', 'development']

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Start services with Docker Compose
        run: docker compose --env-file ./env/local.env up -d db

      - name: Wait for MongoDB to be ready
        run: |
          until docker exec snack-api-payments-db mongosh --eval "db.adminCommand('ping')" > /dev/null 2>&1; do
            echo "Waiting for MongoDB..."
            sleep 5
          done

      - name: Run tests with coverage
        run: npm run test:cov

      - name: Enforce coverage threshold
        run: |
          npx jest --coverage --coverageThreshold='{"global": {"branches": 70, "functions": 70, "lines": 70, "statements": 70}}'

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t snackbarapi/snack-bar-payments:latest ./snack-bar-payments
          docker push snackbarapi/snack-bar-payments:latest

  deploy-to-k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push-image
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set up EKS kubeconfig
        run: |
          aws eks update-kubeconfig --name snack-bar-payments-cluster --region ${{ secrets.AWS_REGION }}

      - name: Update Kubernetes Deployment for API
        run: |
          kubectl set image deployment/snack-bar-payments-api snack-bar-payments-api=snackbarapi/snack-bar-payments:latest -n snack-bar-payments
          kubectl rollout status deployment/snack-bar-payments-api -n snack-bar-payments
